server.port=8083

# nullCatalogMeansCurrentmysql使用schema标识库名而不是catalog，因此mysql会扫描所有的库来找表，如果其他库中有相同名称的表，activiti就以为找到了，本质上这个表在当前数据库中并不存在
# nullCatalogMeansCurrent=true，表示mysql默认当前数据库操作,在mysql-connector-java 5.x.x该参数默认为true，在6.x.x以上默认为false
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/activiti-demo?characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true

spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.check-template-location=true
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML

#需要通过控制器跳转才能访问到templates下的html文件，因为springboot默认访问static,resources,public这些文件夹下的文件，而没有默认访问templates下的
#todo com.ppfly.activiti.config.WebMvcConfig中配置
#spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/templates/

# 注意这里，开启true会自动创建activiti表
spring.activiti.database-schema-update=true
# 启动时候不检查流程配置文件
spring.activiti.check-process-definitions=false